"""update database

Revision ID: 0825bd9a8466
Revises: 
Create Date: 2025-08-21 14:05:01.851944

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0825bd9a8466'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('row_words',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('id_sen', sa.String(), nullable=True),
    sa.Column('word', sa.String(), nullable=True),
    sa.Column('lemma', sa.String(), nullable=True),
    sa.Column('links', sa.String(), nullable=True),
    sa.Column('morph', sa.String(), nullable=True),
    sa.Column('pos', sa.String(), nullable=True),
    sa.Column('phrase', sa.String(), nullable=True),
    sa.Column('grm', sa.String(), nullable=True),
    sa.Column('ner', sa.String(), nullable=True),
    sa.Column('semantic', sa.String(), nullable=True),
    sa.Column('lang_code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_row_words_id'), 'row_words', ['id'], unique=False)
    op.create_index(op.f('ix_row_words_id_sen'), 'row_words', ['id_sen'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('organization', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'user', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('master_row_words',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_string', sa.String(), nullable=True),
    sa.Column('row_word_id', sa.String(), nullable=True),
    sa.Column('id_sen', sa.String(), nullable=True),
    sa.Column('word', sa.String(), nullable=True),
    sa.Column('lemma', sa.String(), nullable=True),
    sa.Column('links', sa.String(), nullable=True),
    sa.Column('morph', sa.String(), nullable=True),
    sa.Column('pos', sa.String(), nullable=True),
    sa.Column('phrase', sa.String(), nullable=True),
    sa.Column('grm', sa.String(), nullable=True),
    sa.Column('ner', sa.String(), nullable=True),
    sa.Column('semantic', sa.String(), nullable=True),
    sa.Column('lang_code', sa.String(), nullable=True),
    sa.Column('create_by', sa.Integer(), nullable=True),
    sa.Column('approval_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approval_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['create_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['row_word_id'], ['row_words.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_master_row_words_id'), 'master_row_words', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_master_row_words_id'), table_name='master_row_words')
    op.drop_table('master_row_words')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_row_words_id_sen'), table_name='row_words')
    op.drop_index(op.f('ix_row_words_id'), table_name='row_words')
    op.drop_table('row_words')
    # ### end Alembic commands ###
